/*
		Copyright 2014-2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.

    Licensed under the Amazon Software License (the "License"). You may not use this file except in compliance with the License. A copy of the License is located at

        http://aws.amazon.com/asl/

    or in the "license" file accompanying this file. This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions and limitations under the License.
 */

var crypto = require('crypto');
var uuid = require('node-uuid');
var RecordAggregator = require('../RecordAggregator');

var generateUserRecordsWithoutEHKs = function() {
    var records = [];
    for (var i = 0; i < 100; i++) {
        var u = uuid.v4();
        var record = {
            PartitionKey : u,
            // random payload
            Data : new Buffer(crypto.randomBytes(100).toString('base64'))
        };
    
        records.push(record);
    }
    return records;
};

var generateUserRecordsWithEHKs = function() {
    return generateUserRecordsWithoutEHKs()
        .map(function(record, index) {
            record.ExplicitHashKey = index;
            return record;
        });
};

var runTest = function(records, assertion) {
    var agg = new RecordAggregator();
    agg.aggregateRecords(records, false, null, null);
    agg.flushBufferedRecords(function(error, aggregated) {
        //console.log(aggregated);
        console.log(assertion(aggregated) ? 'Ok' : 'Failed');
        //console.log(('ExplicitHashKey' in aggregated) ? 'Failed' : 'Ok');
    });
};

runTest(generateUserRecordsWithoutEHKs(), function(aggregated) {
    return !('ExplicitHashKey' in aggregated);
});

runTest(generateUserRecordsWithEHKs(), function(aggregated) {
    //console.log(aggregated)
    return ('ExplicitHashKey' in aggregated);
});

// var agg = new RecordAggregator();
// var records = generateUserRecordsWithoutEHKs();

// agg.aggregateRecords(records, false, null, null);
// agg.flushBufferedRecords(function(error, aggregated) {
//     console.log(aggregated)
//     console.log(('ExplicitHashKey' in aggregated) ? 'Failed' : 'Ok');
// });

// var agg = new RecordAggregator();
// records = generateUserRecordsWithEHKs();

// agg.aggregateRecords(records, false, null, null);
// agg.flushBufferedRecords(function(error, aggregated) {
//     console.log(('ExplicitHashKey' in aggregated) ? 'Ok' : 'Failed');
// });